name: Build and Release domainQuery

on:
  push:
    branches:
      - '*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build project
        run: |
          make build-all
          mkdir -p ./artifacts
          cp release/windows-386/domainQuery_1.0.0.exe ./artifacts/domainQuery_windows_386.exe
          cp release/windows-amd64/domainQuery_1.0.0.exe ./artifacts/domainQuery_windows_amd64.exe
          cp release/linux-386/domainQuery_1.0.0 ./artifacts/domainQuery_linux_386
          cp release/linux-amd64/domainQuery_1.0.0 ./artifacts/domainQuery_linux_amd64
          cp release/linux-arm/domainQuery_1.0.0 ./artifacts/domainQuery_linux_arm
          cp release/linux-arm64/domainQuery_1.0.0 ./artifacts/domainQuery_linux_arm64
          cp release/darwin-amd64/domainQuery_1.0.0 ./artifacts/domainQuery_darwin_amd64
          cp release/darwin-arm64/domainQuery_1.0.0 ./artifacts/domainQuery_darwin_arm64

      - name: List artifacts
        run: ls -R ./artifacts

      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=v$(date +'%Y.%m.%d_%H%M')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: |
            ./artifacts/*
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
